---

# Credit: https://github.com/ctorgalson/ansible-role-rbenv
- name: Check for the existence of rvm (not compatible with rbenv).
  command: "whereis rvm"
  register: rvm_status
  changed_when: false
  failed_when: rvm_status.stdout.find("/") != -1

- name: "Install rbenv & ruby-build via Homebrew."
  homebrew: name={{ item }}
  with_items:
    - rbenv
    - ruby-build
  notify: brew cleanup

- name: Install Ruby via rbenv.
  shell: >
    eval "$(rbenv init -)";
    rbenv install {{ rbenv_default_ruby_version }}
    creates={{ ansible_env.HOME }}/.rbenv/versions/{{ rbenv_default_ruby_version }}

# TODO: Check that .bash_profile exists first
- name: Ensure required eval line is in .bash_profile.
  lineinfile:
    dest: ~/.bash_profile
    line: "eval \"$(rbenv init -)\""

- name: Check the current rbenv global Ruby version.
  shell: >
    eval "$(rbenv init -)";
    rbenv global
  register: rbenv_global
  changed_when: rbenv_global.stdout != rbenv_default_ruby_version

- name: Set the global rbenv Ruby version.
  shell: >
    eval "$(rbenv init -)";
    rbenv global {{ rbenv_default_ruby_version }} && rbenv rehash
  when: rbenv_global.stdout != rbenv_default_ruby_version

# We must set `user_install=no` to install gems to
# ~/.rbenv/versions/{{ rbenv_ruby_version }}/lib/ruby/gems/.
# If not, gems are installed to /usr/local/lib/ruby/gems/ (no good).
# Credit: https://github.com/hnakamur/ansible-role-osx-rbenv
- name: Install default gems to global rbenv Ruby version.
  gem: name={{ item }} state=latest user_install=no executable=~/.rbenv/shims/gem
  with_items: "{{ rbenv_global_gems }}"
  notify: rbenv rehash
